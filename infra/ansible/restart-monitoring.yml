- name: Redémarrer la stack de monitoring avec Ansible
  hosts: all
  become: true

  vars:
      project_dir: /home/ubuntu/saas-platform

  tasks:
      - name: Cloner le projet depuis GitHub
        git:
            repo: "https://github.com/Scarnee/saas-platform.git"
            dest: "{{ project_dir }}"
            version: main
            force: yes

      - name: Arrêter les processus apt en cours
        shell: |
            killall -q apt apt-get || true
        ignore_errors: true

      - name: Mettre à jour le cache apt
        apt:
            update_cache: yes

      - name: Installer les paquets de base nécessaires
        apt:
            name:
                - ca-certificates
                - curl
                - gnupg
                - lsb-release
                - git
            state: present

      - name: Ajouter la clé GPG officielle de Docker
        shell: |
            mkdir -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        args:
            creates: /etc/apt/keyrings/docker.gpg

      - name: Ajouter le dépôt Docker
        shell: |
            echo \
            "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] \
            https://download.docker.com/linux/ubuntu \
            $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
        args:
            creates: /etc/apt/sources.list.d/docker.list

      - name: Mettre à jour le cache apt après ajout du dépôt Docker
        apt:
            update_cache: yes

      - name: Vérifier si Docker est installé
        shell: docker --version
        register: docker_installed
        failed_when: false
        changed_when: false

      - name: Installer Docker et le plugin Docker Compose
        apt:
            name:
                - docker-ce
                - docker-ce-cli
                - containerd.io
                - docker-compose-plugin
            state: present
        when: docker_installed.rc != 0

      - name: Activer et démarrer le service docker
        systemd:
            name: docker
            state: started
            enabled: yes

      - name: Ajouter l'utilisateur ubuntu au groupe docker
        user:
            name: ubuntu
            groups: docker
            append: yes

      - name: Vérifier si les conteneurs de monitoring sont déjà en cours d'exécution
        shell: docker ps -q -f name=monitoring
        register: monitoring_status
        failed_when: false
        changed_when: false

      - name: Arrêter la stack monitoring (docker compose down)
        shell: docker compose down
        args:
            chdir: "{{ project_dir }}/monitoring"
        when: monitoring_status.stdout != ""
        ignore_errors: true

      - name: Démarrer la stack monitoring (docker compose up -d)
        shell: docker compose up -d
        args:
            chdir: "{{ project_dir }}/monitoring"
        when: monitoring_status.stdout == ""
